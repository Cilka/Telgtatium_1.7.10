// Date: 6/4/2018 9:08:44 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.hexopygate.Telgttatium.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelWoodenFence extends ModelBase
{
  //fields
    ModelRenderer Board1;
    ModelRenderer Board2;
    ModelRenderer Plank3;
    ModelRenderer Tip3;
    ModelRenderer Plank2;
    ModelRenderer Tip2;
    ModelRenderer Tip1;
    ModelRenderer Plank1;
    ModelRenderer Plank;
    ModelRenderer Tip;
  
  public ModelWoodenFence()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      Board1 = new ModelRenderer(this, 0, 17);
      Board1.addBox(0F, 0F, 0F, 16, 2, 1);
      Board1.setRotationPoint(-8F, 11F, 1F);
      Board1.setTextureSize(textureWidth, 32);
      Board1.mirror = false;
      setRotation(Board1, 0F, 0F, 0F);
      Board2 = new ModelRenderer(this, 0, 17);
      Board2.addBox(0F, 0F, 0F, 16, 2, 1);
      Board2.setRotationPoint(-8F, 22F, 1F);
      Board2.setTextureSize(32, 32);
      Board2.mirror = false;
      setRotation(Board2, 0F, 0F, 0F);
      Plank3 = new ModelRenderer(this, 0, 0);
      Plank3.addBox(0F, 0F, 0F, 3, 15, 1);
      Plank3.setRotationPoint(-4F, 9F, 0F);
      Plank3.setTextureSize(textureWidth, 32);
      Plank3.mirror = false;
      setRotation(Plank3, 0F, 0F, 0F);
      Tip3 = new ModelRenderer(this, 10, 0);
      Tip3.addBox(0F, 0F, 0F, 1, 1, 1);
      Tip3.setRotationPoint(1F, 8F, 0F);
      Tip3.setTextureSize(textureWidth, 32);
      Tip3.mirror = false;
      setRotation(Tip3, 0F, 0F, 0F);
      Plank2 = new ModelRenderer(this, 0, 0);
      Plank2.addBox(0F, 0F, 0F, 3, 15, 1);
      Plank2.setRotationPoint(-8F, 9F, 0F);
      Plank2.setTextureSize(textureWidth, 32);
      Plank2.mirror = false;
      setRotation(Plank2, 0F, 0F, 0F);
      Tip2 = new ModelRenderer(this, 10, 0);
      Tip2.addBox(0F, 0F, 0F, 1, 1, 1);
      Tip2.setRotationPoint(-7F, 8F, 0F);
      Tip2.setTextureSize(textureWidth, 32);
      Tip2.mirror = false;
      setRotation(Tip2, 0F, 0F, 0F);
      Tip1 = new ModelRenderer(this, 10, 0);
      Tip1.addBox(0F, 0F, 0F, 1, 1, 1);
      Tip1.setRotationPoint(-3F, 8F, 0F);
      Tip1.setTextureSize(textureWidth, 32);
      Tip1.mirror = false;
      setRotation(Tip1, 0F, 0F, 0F);
      Plank1 = new ModelRenderer(this, 0, 0);
      Plank1.addBox(0F, 0F, 0F, 3, 15, 1);
      Plank1.setRotationPoint(0F, 9F, 0F);
      Plank1.setTextureSize(textureWidth, 32);
      Plank1.mirror = false;
      setRotation(Plank1, 0F, 0F, 0F);
      Plank = new ModelRenderer(this, 0, 0);
      Plank.addBox(0F, 0F, 0F, 3, 15, 1);
      Plank.setRotationPoint(4F, 9F, 0F);
      Plank.setTextureSize(textureWidth, 32);
      Plank.mirror = false;
      setRotation(Plank, 0F, 0F, 0F);
      Tip = new ModelRenderer(this, 10, 0);
      Tip.addBox(0F, 0F, 0F, 1, 1, 1);
      Tip.setRotationPoint(5F, 8F, 0F);
      Tip.setTextureSize(textureWidth, 32);
      Tip.mirror = false;
      setRotation(Tip, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    Board1.render(f5);
    Board2.render(f5);
    Plank3.render(f5);
    Tip3.render(f5);
    Plank2.render(f5);
    Tip2.render(f5);
    Tip1.render(f5);
    Plank1.render(f5);
    Plank.render(f5);
    Tip.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
  }

}
