package com.hexopygate.Telgttatium;

import cpw.mods.fml.common.registry.GameRegistry;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.block.Block;
import net.minecraft.block.BlockBreakable;
import net.minecraft.block.BlockGlass;
import net.minecraft.block.material.Material;
import net.minecraft.client.renderer.texture.IIconRegister;
import net.minecraft.init.Blocks;
import net.minecraft.util.Facing;
import net.minecraft.util.IIcon;
import net.minecraft.world.IBlockAccess;

public class TelGlass extends Block {
	String oName = this.getClass().getSimpleName();
	boolean isTransperent;
	 private static final IIcon[] field_149998_a = new IIcon[16];
	public TelGlass(Material mat, boolean isTransparent) {
		super(mat);
		// TODO Auto-generated constructor stub
		this.isTransperent = isTransparent;
		
		 this.setBlockName(oName).setBlockTextureName("tel:"+oName);
		 
		    GameRegistry.registerBlock(this, this.getUnlocalizedName().substring(5));
	}

	public TelGlass()
	{
		this(Material.glass,true);
	
	}
	@Override
    @SideOnly(Side.CLIENT)
    public int getRenderBlockPass()
    {
        return 1;
    }
@Override 
public boolean renderAsNormalBlock()
{
    return false;
}
@Override
	 public boolean isOpaqueCube()
	    {
	        return false;
	    }

	    /**
	     * Returns true if the given side of this block type should be rendered, if the adjacent block is at the given
	     * coordinates.  Args: blockAccess, x, y, z, side
	     */
@Override
	    @SideOnly(Side.CLIENT)
	    public boolean shouldSideBeRendered(IBlockAccess p_149646_1_, int p_149646_2_, int p_149646_3_, int p_149646_4_, int p_149646_5_)
	    {
	        Block block = p_149646_1_.getBlock(p_149646_2_, p_149646_3_, p_149646_4_);

	      
	            if (p_149646_1_.getBlockMetadata(p_149646_2_, p_149646_3_, p_149646_4_) != p_149646_1_.getBlockMetadata(p_149646_2_ - Facing.offsetsXForSide[p_149646_5_], p_149646_3_ - Facing.offsetsYForSide[p_149646_5_], p_149646_4_ - Facing.offsetsZForSide[p_149646_5_]))
	            {
	                return true;
	            }

	            if (block == this)
	            {
	                return false;
	            }
	        

	        return !this.isTransperent && block == this ? false : super.shouldSideBeRendered(p_149646_1_, p_149646_2_, p_149646_3_, p_149646_4_, p_149646_5_);
	    }
@Override
	    @SideOnly(Side.CLIENT)
	    public void registerBlockIcons(IIconRegister p_149651_1_)
	    {
	        this.blockIcon = p_149651_1_.registerIcon(oName);
	    }
	}

